<?php

/**
 * This is the model base class for the table "entityPerson".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EntityPerson".
 *
 * Columns in table "entityPerson" available as properties of the model,
 * followed by relations of table "entityPerson" available as properties of the model.
 *
 * @property integer $entityId
 * @property integer $personId
 * @property string $startDate
 * @property string $endDate
 *
 * @property Entity $entity
 * @property Person $person
 */
abstract class BaseEntityPerson extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'entityPerson';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EntityPerson|EntityPeople', $n);
	}

	public static function representingColumn() {
		return 'startDate';
	}

	public function rules() {
		return array(
			array('entityId, personId', 'required'),
			array('entityId, personId', 'numerical', 'integerOnly'=>true),
			array('startDate, endDate', 'safe'),
			array('startDate, endDate', 'default', 'setOnEmpty' => true, 'value' => null),
			array('entityId, personId, startDate, endDate', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'entity' => array(self::BELONGS_TO, 'Entity', 'entityId'),
			'person' => array(self::BELONGS_TO, 'Person', 'personId'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'entityId' => null,
			'personId' => null,
			'startDate' => Yii::t('app', 'Start Date'),
			'endDate' => Yii::t('app', 'End Date'),
			'entity' => null,
			'person' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('entityId', $this->entityId);
		$criteria->compare('personId', $this->personId);
		$criteria->compare('startDate', $this->startDate, true);
		$criteria->compare('endDate', $this->endDate, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}